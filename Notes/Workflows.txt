----------------------------------------------------------------------------------------------------
Setting up the working environment:

-Install Anaconda (Python distribution) from https://www.anaconda.com/download

-Install Jupyter Lab (Web based notebook interface) from https://jupyter.org/install
 -Nah - no necessary to install separately - it's already included in Anaconda


On Windows, Anaconda gets by default installed into
 C:\Users\[UserName]\anaconda3
-The installer does not create desktop icons (WTF!). One has to start it from the start menu. 
  ToDo: Figure out hwo to manually create the desktop icons. It seems like the start-menu entries 
  trigger python scripts located in the "Scripts" folder of the anaconda installation

It will also install Anacond Navigator - but I have no idea which .exe I need to start. Most 
excutables seem to be in:

  C:/Users/[UserName]/anaconda3/Scripts

but apparently not the Navigator. It can only be started from the start menu. It gives a nice 
overview over what tools are available and what other tools can be additionally installed. However, 
if you already know you want to use - say - Spyder, then opening the navigator just to launch Spyder
is an unnecessary extra step. We really want a desktop shortcut to launch Spyder directly. The file 
Spyder.exe is also located in this Scripts directory, so it's a good idea to create a shortcut from 
there. the same goes for jupyter-lab.exe and jupyter-notebook.exe.

But: when launching Jupyter Lab/Notebook from the shortcuts rather than from the Navigator, the 
included filebrowser has the wrong root directory. Maybe we need to pass it a commandline argument 
for the root directory when starting it - and the Navigator does that but our shortcut doesn't? 
Figure out! See:

https://nocomplexity.com/documents/jupyterlab/notebooks/jupyterlab-cli.html
https://superuser.com/questions/29569/how-to-add-command-line-options-to-shortcut
https://www.digitalcitizen.life/shortcut-arguments-parameters-windows/#google_vignette


  --app-dir=C:\Users\rob

One can also specify the browser, there if one doesn't want to use the default browser. But one 
can also edit the "Start in" field in the shortcut (right-click -> Properties). I use:

  C:\Users\rob\data\GitRepos


The installed Python packages seem to reside in:

  C:\Users\rob\anaconda3\Lib\site-packages

It looks like TensorFlow and Keras is not automaticall installed



On Ubuntu:
-Start Menu -> System -> Muon Package Manager ...nope - doesn't find anaconda
-But maybe on Linux, it's better to install vanilla python and the packages manually
 spyder and jupyter are available

Python libraries:
numpy, pandas, scikit-learn, scipy, matplotlib, tensorflow ...



Maybe not necessarily required but beneficial:

Anaconda Navigator
https://www.anaconda.com/products/navigator

Maybe create an account on anaconda.com in order to get access to Anaconda cloud services like 
"Notebooks" and "Assistent"

The Spyder IDE:  https://www.spyder-ide.org/
The PyCharm IDE: https://www.jetbrains.com/pycharm/  (Payware, subscription based - open source
                 projects my be eligible for a free license)


Codium: https://codeium.com/download  AI pair programming assistent


Installing packages:
https://saturncloud.io/blog/pip-vs-conda-a-guide-to-managing-python-packages-for-data-scientists/
https://www.machinelearningplus.com/machine-learning/setup-python/
https://pythonspeed.com/articles/conda-vs-pip/
-ToDo:
 -Figure out what that environment.yml file is that gets mentioned there.  Do I need it? If so, 
  where should I put it and what should be its content?

After installing anaconda, maybe follow this:
https://docs.anaconda.com/free/anaconda/getting-started/

Question: Should I primarily use Jupyter, Spyder, PyCharm, VS Code or Visual Studio? See:
https://ssiddique.info/pycharm-vs-spyder-vs-jupyter.html


To install Keras on Windows:
-Open the Anaconda Navigator from the Start-Menu
-Click on the Launch button of the "CMD.exe Prompt" field
-Enter "conda install keras" and confirm with "y"

I guess, we will also nee to install either TensorFlow or PyTorch to be used as backend? Let's try:

conda install tensorflow  
-> gives an error message. Apparently it doesn't find any version of  TensorFlow that is compatible 
   with the current Python installation

conda install pytorch
-> That seems to work


----------------------------------------------------------------------------------------------------
Working in Spyder:

-Setting up the environment:
 -Via View -> Panes, one can select the windows/panes that are shown
 -In the top right corner, there's a button to "Undock" one fo the panes to allow it to be moved 
  around. But more important is the "Unlock position" option which allows to drag the pane around 
  and dock it elsewhere
 -Via View -> Window Layouts, one can choose between different default layouts
 -I prefer a layout that is close the Matlab layout, so to set it up, do:
  -Go to View -> Window Layouts -> Matlab Layout
  -Unlock the bottom-center "Console" window, move it to the bottom-right docker, lock it again
  -Save the layout via View -> Window layouts -> Save current layout (Give it a recognizable name)
 -With F11, one can swithc to fullscreen mode - which is nice
 -It makes a lot of sense to let Spyder clear all variables before running a script. This behavior 
  can be opted in by going to  Tools -> Preferences -> Run  and checking the "Remove all variables 
  before execution" checkbox. This behavior is important when we rename variables in a script. If we
  fail to modify *all* occurences in a script, it may still apparently run fine as long as the 
  variables with the old names are still present but the next time we run the script, it will 
  produce errors "NameError: name 'x' is not defined" where 'x' is the old name. Basically, we want
  to run our scripts in a stateless interpreter - i.e. an interpreter that always starts from the 
  default state. There may be exceptions, but most of the time, this is the desired behavior.


-Autocomplete
 -In the console, one may need to press tab after the dot and in the editor, it sometimes doesn't 
  seem to work at all - it seems to not work on objects - on whole libraries, it seems to work

-Consoles:
 -Restart kernel: Use this to start at a clean slate, resetting state of all libraries as well.
 -Remove all variables: 
  -Can also be done by using the trashcan in the variable explorer

-Plots:
 -The button in the top-right has a "Fit plots to window" option


-My Preferences (I only list those which are different from the default):
 -Appearance -> Interface theme: Dark
 -Run -> Remove all variables before execution
 -Editor -> Source code -> Uncheck "Intelligent backspace"


-Help:
 -To get help about some class, function etc. place the cursor in front of it and use Ctrl-I. This 
  will show the documentation in the help window

----------------------------------------------------------------------------------------------------
Working in Jupyter Lab:



...tbc...
